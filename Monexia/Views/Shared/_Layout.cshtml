@using Microsoft.AspNetCore.Identity
@using Monexia.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Monexia</title>
    <link rel="stylesheet" href="~/css/output.css" />
    <script>
        (function() {
          try {
            if (localStorage.getItem('theme') === 'dark') {
              document.documentElement.classList.add('dark');
            } else {
              document.documentElement.classList.remove('dark');
            }
          } catch (e) { }
        })();
    </script>
</head>
<body class="bg-gradient-to-br from-gray-50 to-gray-200 dark:from-gray-900 dark:to-gray-800 text-gray-900 dark:text-gray-100 font-sans min-h-screen flex flex-col">
    <!-- Global Loading Spinner -->
    <div id="globalLoader" class="fixed inset-0 z-[9999] flex items-center justify-center bg-white/80 dark:bg-gray-900/80 transition-opacity duration-500">
        <div class="flex flex-col items-center gap-4">
            <div class="w-16 h-16 border-4 border-purple-400 border-t-transparent rounded-full animate-spin"></div>
            <span class="text-lg font-semibold text-purple-600 dark:text-purple-300">Yükleniyor...</span>
        </div>
    </div>
    <!-- Toast Notification -->
    <div id="toastContainer" class="fixed top-6 right-6 z-[9999] flex flex-col gap-3 items-end"></div>
    <div class="min-h-screen flex flex-col">
        <!-- Header -->
        @await Html.PartialAsync("_Header")
        <div class="flex flex-1 w-full">
            @await Html.PartialAsync("_Sidebar")
            <main class="flex-1 w-full @(SignInManager.IsSignedIn(User) ? "md:ml-64" : "")">
                <div class="p-4 md:p-8">
                    <div class="bg-white dark:bg-gray-900 rounded-2xl shadow-xl p-6 min-h-[calc(100vh-12rem)] animate-fade-in">
                        @RenderBody()
                    </div>
                </div>
            </main>
        </div>
        @await Html.PartialAsync("_Footer")
    </div>
    @RenderSection("Scripts", required: false)
    <script>
        window.addEventListener('load', function () {
            const loader = document.getElementById('globalLoader');
            if (loader) {
                loader.style.opacity = '0';
                setTimeout(() => loader.style.display = 'none', 500);
            }
        });
        // Toast notification fonksiyonu
        function showToast(message, type = 'success', duration = 3000) {
            const icons = {
                success: '<svg class="w-6 h-6 text-green-500" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7" /></svg>',
                error:   '<svg class="w-6 h-6 text-red-500" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" /></svg>',
                warning: '<svg class="w-6 h-6 text-yellow-500" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4m0 4h.01" /></svg>',
                info:    '<svg class="w-6 h-6 text-blue-500" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01" /></svg>'
            };
            const colors = {
                success: 'bg-gradient-to-r from-green-50 via-white to-green-100/80 border-green-400 text-green-900',
                error:   'bg-gradient-to-r from-red-50 via-white to-red-100/80 border-red-400 text-red-900',
                warning: 'bg-gradient-to-r from-yellow-50 via-white to-yellow-100/80 border-yellow-400 text-yellow-900',
                info:    'bg-gradient-to-r from-blue-50 via-white to-blue-100/80 border-blue-400 text-blue-900'
            };
            const toast = document.createElement('div');
            toast.className = `relative flex items-center gap-3 px-6 py-4 rounded-2xl border-l-4 shadow-2xl min-w-[260px] max-w-sm animate-fade-in-up backdrop-blur-md ${colors[type] || colors.success}`;
            toast.innerHTML = `
                <span>${icons[type] || icons.success}</span>
                <span class='flex-1 text-base font-medium'>${message}</span>
                <button class='absolute top-2 right-2 rounded-full p-1 hover:bg-gray-200 dark:hover:bg-gray-700 transition' aria-label='Kapat' style='line-height:0;'>
                    <svg class='w-5 h-5 text-gray-500 hover:text-red-500 transition' fill='none' stroke='currentColor' stroke-width='2' viewBox='0 0 24 24'><path stroke-linecap='round' stroke-linejoin='round' d='M6 18L18 6M6 6l12 12' /></svg>
                </button>`;
            const closeBtn = toast.querySelector('button');
            closeBtn.addEventListener('click', () => {
                toast.classList.add('animate-fade-out-up');
                setTimeout(() => toast.remove(), 500);
            });
            document.getElementById('toastContainer').appendChild(toast);
            const timeout = setTimeout(() => {
                toast.classList.add('animate-fade-out-up');
                setTimeout(() => toast.remove(), 500);
            }, duration);
            toast.addEventListener('mouseenter', () => clearTimeout(timeout));
        }
        // Fade animasyonları için Tailwind'e özel class ekle
        const style = document.createElement('style');
        style.innerHTML = `
        .animate-fade-in-up {animation: fadeInUp .5s cubic-bezier(.39,.575,.565,1.000) both;}
        .animate-fade-out-up {animation: fadeOutUp .5s cubic-bezier(.39,.575,.565,1.000) both;}
        keyframes fadeInUp {0%{opacity:0;transform:translateY(40px);}100%{opacity:1;transform:translateY(0);}}
        keyframes fadeOutUp {0%{opacity:1;transform:translateY(0);}100%{opacity:0;transform:translateY(-40px);}}
        `;
        document.head.appendChild(style);
        // Sunucudan gelen başarı/hata mesajı varsa göster
        window.addEventListener('DOMContentLoaded', function() {
            var successMsg = '@TempData["Success"]';
            if (successMsg && successMsg.length > 0) {
                showToast(successMsg, 'success');
            }
            var errorMsg = '@TempData["Error"]';
            if (errorMsg && errorMsg.length > 0) {
                showToast(errorMsg, 'error');
            }
        });
    </script>
</body>
</html>