@{
    ViewData["Title"] = "Finans Koçu";
}

<style>
    #chat-box {
        height: 70vh;
        display: flex;
        flex-direction: column;
        overflow-y: auto;
        scrollbar-width: thin;
        scrollbar-color: #818cf8 #f3f4f6;
    }

    .dark #chat-box {
        scrollbar-color: #4f46e5 #1f2937;
    }

    .chat-bubble {
        max-width: 80%;
        padding: 0.75rem 1.25rem;
        border-radius: 1.5rem;
        margin-bottom: 1rem;
        word-wrap: break-word;
        line-height: 1.6;
    }

    .user-bubble {
        background-color: #4f46e5;
        color: white;
        align-self: flex-end;
        border-bottom-right-radius: 0.5rem;
    }

    .ai-bubble {
        background-color: #f3f4f6;
        color: #374151;
        align-self: flex-start;
        border-bottom-left-radius: 0.5rem;
    }

    .dark .ai-bubble {
        background-color: #1f2937;
        color: #d1d5db;
    }

    /* AI tarafından render edilen içerik için stiller */
    .ai-bubble ul {
        list-style-type: disc;
        padding-left: 1.5rem;
        margin-top: 0.5rem;
    }

    .ai-bubble li {
        margin-bottom: 0.25rem;
    }

    .ai-bubble strong {
        color: #312e81;
    }

    .dark .ai-bubble strong {
        color: #a5b4fc;
    }

    .typing-indicator span {
        background-color: #6366f1;
    }
</style>

<div class="max-w-4xl mx-auto py-10 animate-fade-in-up">
    <div class="text-center mb-8">
        <h2 class="text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-green-400 via-blue-500 to-purple-400 mb-2">
            Monexia Finans Koçu
        </h2>
        <p class="text-gray-600 dark:text-gray-400">Finansal verileriniz hakkında merak ettiklerinizi sorun.</p>
    </div>

    <div class="bg-white/80 dark:bg-gray-900/80 backdrop-blur-sm shadow-2xl rounded-2xl border border-gray-200 dark:border-gray-700">
        <div id="chat-box" class="p-6">
            <div class="chat-bubble ai-bubble">
                <p>Merhaba! Ben Monexia, kişisel finans koçunuz. Son 3 aylık harcamalarınız, hedefleriniz veya bütçeniz hakkında sorular sorabilirsiniz. Örneğin:</p>
                <ul>
                    <li>Bu ay en çok neye para harcadım?</li>
                    <li>Hedeflerime ulaşmam için ne kadar birikim yapmalıyım?</li>
                </ul>
            </div>
        </div>

        <div class="p-4 border-t border-gray-200 dark:border-gray-800">
            <form id="chat-form" class="flex items-center gap-3">
                <input type="text" id="user-input" placeholder="Mesajınızı yazın..." class="flex-grow w-full rounded-full border-gray-300 dark:border-gray-600 bg-gray-100 dark:bg-gray-800 px-5 py-3 text-base text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition" autocomplete="off" />
                <button type="submit" id="send-button" class="p-3 rounded-full bg-indigo-600 text-white hover:bg-indigo-700 transition shadow-lg focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>
                </button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const chatBox = document.getElementById('chat-box');
            const chatForm = document.getElementById('chat-form');
            const userInput = document.getElementById('user-input');
            const sendButton = document.getElementById('send-button');

            function addMessage(message, sender, isHtml = false) {
                const bubble = document.createElement('div');
                bubble.className = `chat-bubble ${sender}-bubble`;

                if (isHtml) {
                    bubble.innerHTML = message;
                } else {
                    bubble.textContent = message;
                }

                chatBox.appendChild(bubble);
                chatBox.scrollTop = chatBox.scrollHeight;
            }

            function showTypingIndicator() {
                const indicatorBubble = document.createElement('div');
                indicatorBubble.id = 'typing-indicator';
                indicatorBubble.className = 'chat-bubble ai-bubble';
                indicatorBubble.innerHTML = `<div class="typing-indicator" style="display: flex; align-items: center; gap: 0.25rem;"><span style="animation: bounce 1.4s infinite ease-in-out both; animation-delay: -0.32s;"></span><span style="animation: bounce 1.4s infinite ease-in-out both; animation-delay: -0.16s;"></span><span style="animation: bounce 1.4s infinite ease-in-out both;"></span></div>`;
                chatBox.appendChild(indicatorBubble);
                chatBox.scrollTop = chatBox.scrollHeight;
            }
            function removeTypingIndicator() {
                const indicator = document.getElementById('typing-indicator');
                if (indicator) {
                    indicator.remove();
                }
            }

            chatForm.addEventListener('submit', async function (e) {
                e.preventDefault();
                const question = userInput.value.trim();
                if (!question) return;

                addMessage(question, 'user');
                userInput.value = '';
                sendButton.disabled = true;
                showTypingIndicator();

                try {
                    const response = await fetch('/FinancialCoach/Ask', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ question: question })
                    });

                    removeTypingIndicator();

                    if (response.ok) {
                        const data = await response.json();
                        if (data.success) {
                            const formattedAnswer = marked.parse(data.answer);
                            addMessage(formattedAnswer, 'ai', true);
                        } else {
                            addMessage(data.message || 'Bir hata oluştu.', 'ai');
                        }
                    } else {
                         addMessage('Sunucuyla iletişim kurarken bir hata oluştu. Lütfen tekrar deneyin.', 'ai');
                    }
                } catch (error) {
                    removeTypingIndicator();
                    addMessage('Bir ağ hatası oluştu. Lütfen internet bağlantınızı kontrol edin.', 'ai');
                    console.error('Fetch error:', error);
                } finally {
                    sendButton.disabled = false;
                    userInput.focus();
                }
            });
        });
    </script>
}